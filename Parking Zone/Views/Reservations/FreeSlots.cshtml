@model ParkingZone.ViewModels.ReservationVMs.CreateReservationViewModel

@{
    ViewData["Title"] = "Reservation";
}

<h4>Reservation</h4>
<hr />

<form class="form-control" asp-action="ShowFreeSlots" method="post" style="width:30%; margin:0% 35%;">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="mb-3">
        <label asp-for="ZoneId" class="control-label">
            Zone:
        </label>
        @Html.DropDownList("ZoneId", (IEnumerable<SelectListItem>)ViewBag.Zones, "Select zone", new { @class = "form-control" })
        <span asp-validation-for="ZoneId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="StartTime" class="control-label"></label>
        <input asp-for="StartTime" class="form-control" value="@Model.StartTime.ToString("dd-MM-yyyy HH:mm")" />
        <span asp-validation-for="StartTime" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Duration" class="control-label"></label>
        <input asp-for="Duration" class="form-control" />
        <span asp-validation-for="Duration" class="text-danger"></span>
    </div><br />
    <center>
        <div class="mb-3">
            <input type="submit" value="See" class="btn btn-primary" style="width:60%;" />
        </div>
    </center>
</form>

@section Scripts {
    <script>
        document.getElementById("reservationForm").addEventListener("submit", function (e) {
            // Validate Duration
            var duration = document.getElementById("durationInput").value;
            if (duration <= 0) {
                e.preventDefault(); // Prevent form submission
                alert("Duration must be greater than 0!");
                return;
            }

            //Validate StartTime
            var startTime = new Date(document.getElementById("startTimeInput").value);
            var now = new Date();
            now.setSeconds(0, 0); // Remove seconds and milliseconds for comparison

            if (startTime < now) {
                e.preventDefault(); // Prevent form submission
                alert("Start time must be greater than or equal to the current time!");
            }
        });

        // Formatlash uchun yordamchi funksiya
        function formatDateTime(date) {
            const day = ("0" + date.getDate()).slice(-2);
            const month = ("0" + (date.getMonth() + 1)).slice(-2);
            const year = date.getFullYear();
            const hours = ("0" + date.getHours()).slice(-2);
            const minutes = ("0" + date.getMinutes()).slice(-2);
            return `${day}-${month}-${year} ${hours}:${minutes}`;
        }

        document.getElementById("reservationForm").addEventListener("submit", function (e) {
            var startTimeInput = document.getElementById("startTimeInput");
            var startTime = new Date(startTimeInput.value);

            // Formating startTime as dd-MM-yyyy HH:mm
            startTimeInput.value = formatDateTime(startTime);
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
